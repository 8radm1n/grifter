    node.vm.provider :libvirt do |domain|
      domain.default_prefix = "#{domain_prefix}"
      {% if guest.provider_config.random_hostname %}
      domain.random_hostname = true
      {% endif %}
      {% if guest.provider_config.cpus %}
      domain.cpus = {{ guest.provider_config.cpus }}
      {% endif %}
      {% if guest.provider_config.memory %}
      domain.memory = {{ guest.provider_config.memory }}
      {% endif %}
      {% if guest.provider_config.huge_pages %}
      domain.memorybacking :hugepages
      {% endif %}
      {% if guest.provider_config.storage_pool %}
      domain.storage_pool_name = "{{ guest.provider_config.storage_pool }}"
      {% endif %}
      {% if guest.provider_config.disk_bus %}
      domain.disk_bus = "{{ guest.provider_config.disk_bus }}"
      {% endif %}
      {% if guest.provider_config.management_network_mac %}
      domain.management_network_mac = "{{ guest.provider_config.management_network_mac }}"
      {% endif %}
      {% if guest.provider_config.nic_adapter_count %}
      domain.nic_adapter_count = {{ guest.provider_config.nic_adapter_count }}
      {% endif %}
      {% if guest.provider_config.nic_model_type %}
      domain.nic_model_type = "{{ guest.provider_config.nic_model_type }}"
      {% endif %}
      {% if guest.provider_config.additional_storage_volumes %}
      {% for volume in guest.provider_config.additional_storage_volumes %}
      domain.storage :file, :path => "#{username}-#{guest_name}-{{ volume.location.split('/')[-1] }}", :size => "{{ volume.size }}", :type => "{{ volume.type }}", :bus => "{{ volume.bus }}", :device => "{{ volume.device }}", :allow_existing => true
      {% endfor %}
      {% endif %}
    end
    {#  #}